apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
type: Opaque
stringData:
  dbPassword: {{ required "Setting a database password is required!" .Values.global.postgresql.auth.password | quote }}
data:
  # retrieve the secret data using lookup function and when none exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "backend-secrets") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "jwtSecret") | default (randAlphaNum 32 | b64enc) }}
  JWT_SECRET: {{ $jwtSecret | quote }}