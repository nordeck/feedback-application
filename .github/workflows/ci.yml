name: CI

on:
  push:
    branches:
      - main
  pull_request:

env:
  DOCKER_IMAGE: ghcr.io/nordeck/feedback-backend

jobs:
  test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Set up Go environment
        uses: actions/setup-go@v3.3.1
        with:
          go-version: '1.19'

      - name: checkout repo
        uses: actions/checkout@v2
        
      - name: build & test application
        run: make test
        
  docker-build-push-backend:
    runs-on: ubuntu-latest
    outputs:
      docker-tag: ${{ steps.meta.outputs.version }}
    needs: test-backend
    steps:
      - uses: actions/checkout@v3
        with:
          # required for changesets
          fetch-depth: '0'
          # don't persist the credentials so the changesets action doesn't use the
          # github actions token but the git token provided via environment variable
          persist-credentials: false

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.DOCKER_IMAGE }}
          labels: |
            org.opencontainers.image.title=Jitsi Feedback Application Backend
            org.opencontainers.image.description=This Feedback Application component offers a REST API for the clients to interface with the database
            org.opencontainers.image.vendor=Nordeck IT + Consulting GmbH
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch,enable=true
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag

      - name: Docker build and push
        uses: docker/build-push-action@v3
        id: dockerBuild
        with:
          push: true
          context: ./backend/
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
